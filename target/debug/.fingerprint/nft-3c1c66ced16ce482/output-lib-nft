{"message":"this struct takes 4 generic arguments but 2 generic arguments were supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"contracts/nft/src/contract.rs","byte_start":1138,"byte_end":1151,"line_start":35,"line_end":35,"column_start":50,"column_end":63,"is_primary":true,"text":[{"text":"pub type Cw721MetadataContract<'a> = cw721_base::Cw721Contract<'a, Extension, Empty>;","highlight_start":50,"highlight_end":63}],"label":"expected 4 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/nft/src/contract.rs","byte_start":1156,"byte_end":1165,"line_start":35,"line_end":35,"column_start":68,"column_end":77,"is_primary":false,"text":[{"text":"pub type Cw721MetadataContract<'a> = cw721_base::Cw721Contract<'a, Extension, Empty>;","highlight_start":68,"highlight_end":77}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/nft/src/contract.rs","byte_start":1167,"byte_end":1172,"line_start":35,"line_end":35,"column_start":79,"column_end":84,"is_primary":false,"text":[{"text":"pub type Cw721MetadataContract<'a> = cw721_base::Cw721Contract<'a, Extension, Empty>;","highlight_start":79,"highlight_end":84}],"label":"supplied 2 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"struct defined here, with 4 generic parameters: `T`, `C`, `E`, `Q`","code":null,"level":"note","spans":[{"file_name":"/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/state.rs","byte_start":356,"byte_end":357,"line_start":11,"line_end":11,"column_start":30,"column_end":31,"is_primary":false,"text":[{"text":"pub struct Cw721Contract<'a, T, C, E, Q>","highlight_start":30,"highlight_end":31}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/state.rs","byte_start":359,"byte_end":360,"line_start":11,"line_end":11,"column_start":33,"column_end":34,"is_primary":false,"text":[{"text":"pub struct Cw721Contract<'a, T, C, E, Q>","highlight_start":33,"highlight_end":34}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/state.rs","byte_start":362,"byte_end":363,"line_start":11,"line_end":11,"column_start":36,"column_end":37,"is_primary":false,"text":[{"text":"pub struct Cw721Contract<'a, T, C, E, Q>","highlight_start":36,"highlight_end":37}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/state.rs","byte_start":365,"byte_end":366,"line_start":11,"line_end":11,"column_start":39,"column_end":40,"is_primary":false,"text":[{"text":"pub struct Cw721Contract<'a, T, C, E, Q>","highlight_start":39,"highlight_end":40}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/state.rs","byte_start":338,"byte_end":351,"line_start":11,"line_end":11,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"pub struct Cw721Contract<'a, T, C, E, Q>","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic arguments","code":null,"level":"help","spans":[{"file_name":"contracts/nft/src/contract.rs","byte_start":1172,"byte_end":1172,"line_start":35,"line_end":35,"column_start":84,"column_end":84,"is_primary":true,"text":[{"text":"pub type Cw721MetadataContract<'a> = cw721_base::Cw721Contract<'a, Extension, Empty>;","highlight_start":84,"highlight_end":84}],"label":null,"suggested_replacement":", E, Q","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: this struct takes 4 generic arguments but 2 generic arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/nft/src/contract.rs:35:50\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type Cw721MetadataContract<'a> = cw721_base::Cw721Contract<'a, Extension, Empty>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 2 generic arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 4 generic arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: struct defined here, with 4 generic parameters: `T`, `C`, `E`, `Q`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/state.rs:11:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Cw721Contract<'a, T, C, E, Q>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub type Cw721MetadataContract<'a> = cw721_base::Cw721Contract<'a, Extension, Empty\u001b[0m\u001b[0m\u001b[38;5;10m, E, Q\u001b[0m\u001b[0m>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                    \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"message":"this enum takes 2 generic arguments but 1 generic argument was supplied","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"contracts/nft/src/contract.rs","byte_start":1209,"byte_end":1219,"line_start":36,"line_end":36,"column_start":35,"column_end":45,"is_primary":true,"text":[{"text":"pub type ExecuteMsg = cw721_base::ExecuteMsg<Extension>;","highlight_start":35,"highlight_end":45}],"label":"expected 2 generic arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/nft/src/contract.rs","byte_start":1220,"byte_end":1229,"line_start":36,"line_end":36,"column_start":46,"column_end":55,"is_primary":false,"text":[{"text":"pub type ExecuteMsg = cw721_base::ExecuteMsg<Extension>;","highlight_start":46,"highlight_end":55}],"label":"supplied 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"enum defined here, with 2 generic parameters: `T`, `E`","code":null,"level":"note","spans":[{"file_name":"/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/msg.rs","byte_start":726,"byte_end":727,"line_start":22,"line_end":22,"column_start":21,"column_end":22,"is_primary":false,"text":[{"text":"pub enum ExecuteMsg<T, E> {","highlight_start":21,"highlight_end":22}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/msg.rs","byte_start":729,"byte_end":730,"line_start":22,"line_end":22,"column_start":24,"column_end":25,"is_primary":false,"text":[{"text":"pub enum ExecuteMsg<T, E> {","highlight_start":24,"highlight_end":25}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/msg.rs","byte_start":715,"byte_end":725,"line_start":22,"line_end":22,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub enum ExecuteMsg<T, E> {","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"contracts/nft/src/contract.rs","byte_start":1229,"byte_end":1229,"line_start":36,"line_end":36,"column_start":55,"column_end":55,"is_primary":true,"text":[{"text":"pub type ExecuteMsg = cw721_base::ExecuteMsg<Extension>;","highlight_start":55,"highlight_end":55}],"label":null,"suggested_replacement":", E","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: this enum takes 2 generic arguments but 1 generic argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/nft/src/contract.rs:36:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type ExecuteMsg = cw721_base::ExecuteMsg<Extension>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 1 generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 2 generic arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: enum defined here, with 2 generic parameters: `T`, `E`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/msg.rs:22:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum ExecuteMsg<T, E> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub type ExecuteMsg = cw721_base::ExecuteMsg<Extension\u001b[0m\u001b[0m\u001b[38;5;10m, E\u001b[0m\u001b[0m>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"message":"missing generics for enum `cw721_base::QueryMsg`","code":{"code":"E0107","explanation":"An incorrect number of generic arguments was provided.\n\nErroneous code example:\n\n```compile_fail,E0107\nstruct Foo<T> { x: T }\n\nstruct Bar { x: Foo }             // error: wrong number of type arguments:\n                                  //        expected 1, found 0\nstruct Baz<S, T> { x: Foo<S, T> } // error: wrong number of type arguments:\n                                  //        expected 1, found 2\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool>(x);                 // error: wrong number of type arguments:\n                                    //        expected 2, found 1\n    foo::<bool, i32, i32>(x, 2, 4); // error: wrong number of type arguments:\n                                    //        expected 2, found 3\n    f::<'static>();                 // error: wrong number of lifetime arguments\n                                    //        expected 0, found 1\n}\n```\n\nWhen using/declaring an item with generic arguments, you must provide the exact\nsame number:\n\n```\nstruct Foo<T> { x: T }\n\nstruct Bar<T> { x: Foo<T> }               // ok!\nstruct Baz<S, T> { x: Foo<S>, y: Foo<T> } // ok!\n\nfn foo<T, U>(x: T, y: U) {}\nfn f() {}\n\nfn main() {\n    let x: bool = true;\n    foo::<bool, u32>(x, 12);              // ok!\n    f();                                  // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"contracts/nft/src/contract.rs","byte_start":1264,"byte_end":1272,"line_start":37,"line_end":37,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"pub type QueryMsg = cw721_base::QueryMsg;","highlight_start":33,"highlight_end":41}],"label":"expected 1 generic argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"enum defined here, with 1 generic parameter: `Q`","code":null,"level":"note","spans":[{"file_name":"/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/msg.rs","byte_start":2450,"byte_end":2451,"line_start":75,"line_end":75,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"pub enum QueryMsg<Q> {","highlight_start":19,"highlight_end":20}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/msg.rs","byte_start":2441,"byte_end":2449,"line_start":75,"line_end":75,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"pub enum QueryMsg<Q> {","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"add missing generic argument","code":null,"level":"help","spans":[{"file_name":"contracts/nft/src/contract.rs","byte_start":1264,"byte_end":1272,"line_start":37,"line_end":37,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"pub type QueryMsg = cw721_base::QueryMsg;","highlight_start":33,"highlight_end":41}],"label":null,"suggested_replacement":"QueryMsg<Q>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0107]\u001b[0m\u001b[0m\u001b[1m: missing generics for enum `cw721_base::QueryMsg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/nft/src/contract.rs:37:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type QueryMsg = cw721_base::QueryMsg;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: enum defined here, with 1 generic parameter: `Q`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/bmorkai/.cargo/registry/src/github.com-1ecc6299db9ec823/cw721-base-0.16.0/src/msg.rs:75:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum QueryMsg<Q> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: add missing generic argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub type QueryMsg = cw721_base::\u001b[0m\u001b[0m\u001b[38;5;10mQueryMsg<Q>\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"aborting due to 3 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 3 previous errors\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0107`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0107`.\u001b[0m\n"}
